// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	encoding "github.com/seamusv/fm-integration/encoding"

	mock "github.com/stretchr/testify/mock"

	time "time"
)

// Executor is an autogenerated mock type for the Executor type
type Executor struct {
	mock.Mock
}

// Err provides a mock function with given fields:
func (_m *Executor) Err() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Execute provides a mock function with given fields: command, messageCodes
func (_m *Executor) Execute(command string, messageCodes ...string) *encoding.Response {
	_va := make([]interface{}, len(messageCodes))
	for _i := range messageCodes {
		_va[_i] = messageCodes[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, command)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *encoding.Response
	if rf, ok := ret.Get(0).(func(string, ...string) *encoding.Response); ok {
		r0 = rf(command, messageCodes...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*encoding.Response)
		}
	}

	return r0
}

// ExecuteFields provides a mock function with given fields: command, v, messageCodes
func (_m *Executor) ExecuteFields(command string, v interface{}, messageCodes ...string) *encoding.Response {
	_va := make([]interface{}, len(messageCodes))
	for _i := range messageCodes {
		_va[_i] = messageCodes[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, command, v)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *encoding.Response
	if rf, ok := ret.Get(0).(func(string, interface{}, ...string) *encoding.Response); ok {
		r0 = rf(command, v, messageCodes...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*encoding.Response)
		}
	}

	return r0
}

// Login provides a mock function with given fields: profile, organisation, businessDate
func (_m *Executor) Login(profile string, organisation string, businessDate time.Time) {
	_m.Called(profile, organisation, businessDate)
}

// Logout provides a mock function with given fields:
func (_m *Executor) Logout() {
	_m.Called()
}
